<?xml version="1.0" encoding="UTF-8"?>
<!--

    (c) 2020 Open Source Geospatial Foundation - all rights reserved
    This code is licensed under the GPL 2.0 license,
    available at the root application directory.

--><!--

    /* (c) 2020 Open Source Geospatial Foundation - all rights reserved
     * This code is licensed under the GPL 2.0 license, available at the root
     * application directory.
     */

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.geonetwork-opensource.cloud</groupId>
  <artifactId>gn-cloud-microservices</artifactId>
  <version>4.2.3-0</version>
  <packaging>pom</packaging>
  <name>GeoNetwork microservices</name>
  <url>https://geonetwork-opensource.org</url>
  <inceptionYear>2020</inceptionYear>
  <scm>
    <connection>scm:git:https://github.com/geonetwork/geonetwork-microservices.git</connection>
    <developerConnection>scm:git:https://github.com/geonetwork/geonetwork-microservices.git</developerConnection>
    <url>https://github.com/geonetwork/geonetwork-microservices</url>
    <tag>HEAD</tag>
  </scm>

  <properties>
    <spring-cloud.version>Hoxton.SR8</spring-cloud.version>
    <spring-boot.version>2.3.8.RELEASE</spring-boot.version>
    <spring-security-oauth2-core.version>5.3.2.RELEASE</spring-security-oauth2-core.version>
    <geonetwork.version>4.0.0-0</geonetwork.version>
    <jetty.version>9.4.27.v20200227</jetty.version>

    <elasticsearch.version>7.15.1</elasticsearch.version>
    <micrometer.version>1.5.5</micrometer.version>
    <camel.version>3.5.0</camel.version>
    <swagger.version>2.1.2</swagger.version>
    <joda-time.version>2.10.6</joda-time.version>
    <jackson.version>2.11.4</jackson.version>
    <jts.version>1.18.1</jts.version>
    <rdf4j.version>3.5.0</rdf4j.version>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <java.version>11</java.version>
    <fork.javac>true</fork.javac>
    <javac.maxHeapSize>256M</javac.maxHeapSize>

    <packaging.type>jar</packaging.type>
  </properties>

  <modules>
    <module>modules</module>
  </modules>

  <repositories>
    <repository>
      <id>OSGeo</id>
      <url>https://repo.osgeo.org/repository/release/</url>
    </repository>
  </repositories>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.eclipse.rdf4j</groupId>
        <artifactId>rdf4j-bom</artifactId>
        <version>${rdf4j.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.security</groupId>
        <artifactId>spring-security-jwt</artifactId>
        <version>1.1.1.RELEASE</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.security.oauth</groupId>
        <artifactId>spring-security-oauth2</artifactId>
        <version>${spring-boot.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.security</groupId>
        <artifactId>spring-security-oauth2-core</artifactId>
        <version>${spring-security-oauth2-core.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geonetwork-opensource.cloud</groupId>
        <artifactId>gn-cloud-common-error</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geonetwork-opensource.cloud</groupId>
        <artifactId>gn-cloud-common-view</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geonetwork-opensource.cloud</groupId>
        <artifactId>gn-cloud-common-persistence</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geonetwork-opensource.cloud</groupId>
        <artifactId>gn-cloud-common-index-model</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geonetwork-opensource.cloud</groupId>
        <artifactId>gn-cloud-common-search</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geonetwork-opensource.cloud</groupId>
        <artifactId>gn-cloud-common-security</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geonetwork-opensource.cloud</groupId>
        <artifactId>gn-cloud-common-utility</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geonetwork-opensource.cloud</groupId>
        <artifactId>gn-cloud-common-standards</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geonetwork-opensource.cloud</groupId>
        <artifactId>gn-cloud-ogc-api-records-generated</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geonetwork-opensource.cloud</groupId>
        <artifactId>gn-cloud-standard-iso19139</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geonetwork-opensource.cloud</groupId>
        <artifactId>gn-cloud-ogc-api-records-service</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>org.geonetwork-opensource</groupId>
        <artifactId>gn-domain</artifactId>
        <version>${geonetwork.version}</version>
        <exclusions>
          <exclusion>
            <groupId>net.sf.saxon</groupId>
            <artifactId>saxon</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <!--
      Needed for java.lang.RuntimeException: java.lang.NoClassDefFoundError:
       org/fao/geonet/ApplicationContextHolder
      -->
      <dependency>
        <groupId>org.geonetwork-opensource</groupId>
        <artifactId>gn-common</artifactId>
        <version>${geonetwork.version}</version>
        <exclusions>
          <exclusion>
            <groupId>net.sf.saxon</groupId>
            <artifactId>saxon</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>fop</artifactId>
          </exclusion>
          <exclusion>
            <groupId>xom</groupId>
            <artifactId>xom</artifactId>
          </exclusion>
          <exclusion>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-ldap</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.elasticsearch.client</groupId>
        <artifactId>elasticsearch-rest-high-level-client</artifactId>
        <version>${elasticsearch.version}</version>
      </dependency>
      <dependency>
        <groupId>org.elasticsearch</groupId>
        <artifactId>elasticsearch</artifactId>
        <version>${elasticsearch.version}</version>
      </dependency>
      <dependency>
        <groupId>org.locationtech.spatial4j</groupId>
        <artifactId>spatial4j</artifactId>
        <version>0.6</version>
      </dependency>
      <dependency>
        <groupId>org.locationtech.jts</groupId>
        <artifactId>jts-core</artifactId>
        <version>${jts.version}</version>
      </dependency>
      <dependency>
        <groupId>org.locationtech.jts.io</groupId>
        <artifactId>jts-io-common</artifactId>
        <version>${jts.version}</version>
      </dependency>
      <dependency>
        <groupId>net.sf.saxon</groupId>
        <artifactId>Saxon-HE</artifactId>
        <version>10.2</version>
      </dependency>
      <dependency>
        <groupId>javax.xml.bind</groupId>
        <artifactId>jaxb-api</artifactId>
        <version>2.3.1</version>
      </dependency>
      <dependency>
        <groupId>joda-time</groupId>
        <artifactId>joda-time</artifactId>
        <version>${joda-time.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.dataformat</groupId>
        <artifactId>jackson-dataformat-xml</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-annotations</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.camel.springboot</groupId>
        <artifactId>camel-spring-boot-dependencies</artifactId>
        <version>${camel.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>io.micrometer</groupId>
        <artifactId>micrometer-core</artifactId>
        <version>${micrometer.version}</version>
      </dependency>
      <dependency>
        <groupId>io.micrometer</groupId>
        <artifactId>micrometer-registry-prometheus</artifactId>
        <version>${micrometer.version}</version>
      </dependency>
      <!--<dependency>
        <groupId>io.micrometer</groupId>
        <artifactId>micrometer-registry-elastic</artifactId>
        <version>${micrometer.version}</version>
      </dependency>-->
      <dependency>
        <groupId>io.swagger.core.v3</groupId>
        <artifactId>swagger-annotations</artifactId>
        <version>${swagger.version}</version>
      </dependency>
      <dependency>
        <groupId>io.swagger.core.v3</groupId>
        <artifactId>swagger-models</artifactId>
        <version>${swagger.version}</version>
      </dependency>
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>1.18.12</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>commons-lang</groupId>
        <artifactId>commons-lang</artifactId>
        <version>2.6</version>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>2.7</version>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>24.1.1-jre</version>
      </dependency>
      <dependency>
        <groupId>org.jdom</groupId>
        <artifactId>jdom</artifactId>
        <version>1.1.3</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-test</artifactId>
        <version>${spring-boot.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-configuration-processor</artifactId>
        <version>${spring-boot.version}</version>
        <optional>true</optional>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <profiles>
    <!-- Use -Drelax property to avoid:
* findbug
* checkstyle
* and tests. -->
    <profile>
      <id>relax-build</id>
      <activation>
        <property>
          <name>relax</name>
        </property>
      </activation>
      <properties>
        <maven.test.skip>true</maven.test.skip>
      </properties>
    </profile>
    <profile>
      <id>full-build</id>
      <activation>
        <property>
          <name>!relax</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
            <version>3.1.1</version>
            <executions>
              <execution>
                <id>check</id>
                <goals>
                  <goal>check</goal>
                </goals>
                <phase>test</phase>
              </execution>
            </executions>
            <configuration>
              <configLocation>google_checks.xml</configLocation>
              <logViolationsToConsole>true</logViolationsToConsole>
              <maxAllowedViolations>0</maxAllowedViolations>
              <violationSeverity>warning</violationSeverity>
              <encoding>UTF-8</encoding>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>war</id>
      <properties>
        <packaging.type>war</packaging.type>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-tomcat</artifactId>
          <scope>provided</scope>
        </dependency>
      </dependencies>
    </profile>
  </profiles>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>3.0.0-M3</version>
        </plugin>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.1</version>
          <configuration>
            <release>${java.version}</release>
            <debug>true</debug>
            <encoding>UTF-8</encoding>
            <fork>${fork.javac}</fork>
            <maxmem>${javac.maxHeapSize}</maxmem>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-war-plugin</artifactId>
          <version>3.2.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>${spring-boot.version}</version>
          <inherited>true</inherited>
        </plugin>
        <plugin>
          <groupId>com.mycila</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>3.0</version>
          <configuration>
            <header>${maven.multiModuleProjectDirectory}/doc/license-header.txt</header>
            <includes>
              <include>**/*.java</include>
              <include>**/*.jsp</include>
              <include>**/*.xsd</include>
              <include>**/*.xml</include>
              <include>**/*.xsl</include>
              <include>**/*.html</include>
              <include>**/*.js</include>
              <include>pom.xml</include>
            </includes>
            <headerDefinitions>
              <headerDefinition>doc/license-config.xml</headerDefinition>
            </headerDefinitions>
          </configuration>
        </plugin>
        <!--
        To get list of licences from third-party libs:
        mvn license:add-third-party
        -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>1.8</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.2.1</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <executions>
            <execution>
              <id>attach-sources</id>
              <phase>verify</phase>
              <goals>
                <goal>jar-no-fork</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <executions>
            <execution>
              <id>enforce-versions</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>
                  <requireMavenVersion>
                    <version>3.6.3</version>
                  </requireMavenVersion>
                  <requireJavaVersion>
                    <version>${java.version}</version>
                  </requireJavaVersion>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>
    </plugins>
  </build>
</project>
