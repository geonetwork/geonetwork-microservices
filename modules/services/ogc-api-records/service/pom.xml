<?xml version="1.0" encoding="UTF-8"?>
<!--

    (c) 2020 Open Source Geospatial Foundation - all rights reserved
    This code is licensed under the GPL 2.0 license,
    available at the root application directory.

-->
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>gn-ogc-api-records</artifactId>
    <groupId>org.geonetwork-opensource.cloud</groupId>
    <version>0.1-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <artifactId>gn-ogc-api-records-service</artifactId>
  <name>OGC API Records service</name>
  <url>http://geonetwork-opensource.org</url>
  <packaging>${packaging.type}</packaging>

  <dependencies>
    <dependency>
      <groupId>org.geonetwork-opensource.cloud</groupId>
      <artifactId>gn-ogc-api-records-generated</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geonetwork-opensource.cloud</groupId>
      <artifactId>gn-cloud-common-security</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.geonetwork-opensource.cloud</groupId>
      <artifactId>gn-cloud-common-index-model</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geonetwork-opensource.cloud</groupId>
      <artifactId>gn-cloud-common-search</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geonetwork-opensource.cloud</groupId>
      <artifactId>gn-cloud-common-utility</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geonetwork-opensource.cloud</groupId>
      <artifactId>gn-cloud-common-error</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geonetwork-opensource.cloud</groupId>
      <artifactId>gn-cloud-common-standards</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geonetwork-opensource.cloud</groupId>
      <artifactId>gn-cloud-standard-iso19139</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-config</artifactId>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
    </dependency>
    <dependency>
      <groupId>io.swagger.core.v3</groupId>
      <artifactId>swagger-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>io.swagger.core.v3</groupId>
      <artifactId>swagger-models</artifactId>
    </dependency>

    <!--  test dependencies  -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
    </dependency>
  </dependencies>

  <build>
    <finalName>gn-ogc-api-records</finalName>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
              <goal>build-info</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <mainClass>org.fao.geonet.ogcapi.records.OgcApiRecordApp</mainClass>
          <excludes>
            <exclude>
              <groupId>org.springframework.boot</groupId>
              <artifactId>spring-boot-configuration-processor</artifactId>
            </exclude>
          </excludes>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>9.4.27.v20200227</version>
        <configuration>
          <scanIntervalSeconds>10</scanIntervalSeconds>
          <httpConnector>
            <port>9999</port>
          </httpConnector>
          <stopKey>JETTY_TOP</stopKey>
          <stopPort>9998</stopPort>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>docker</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>build-image</id>
                <goals>
                  <goal>build-info</goal>
                  <goal>build-image</goal>
                </goals>
                <configuration>
                  <layers>
                    <enabled>true</enabled>
                  </layers>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
