server:
  port: 8080
  instance-id: ${spring.application.name}:${spring.application.instance_id:${spring.cloud.client.ip-address}}:${server.port}
spring:
  application.name: search-service
  main.banner-mode: off
  cloud:
    loadbalancer.ribbon.enabled: false # ribbon is in maintenance mode and should be replaced by spring-cloud-loadbalancer
    config:
      fail-fast: true
      retry:
        max-attempts: 20
      discovery:
        enabled: true
        service-id: config-service

eureka:
  instance:
    hostname: ${spring.application.name}
    instance-id: ${server.instance-id}
    preferIpAddress: true
    lease-expiration-duration-in-seconds: 30
    lease-renewal-interval-in-seconds: 30
  client:
    enabled: true
    registerWithEureka: true
    fetchRegistry: true
    registry-fetch-interval-seconds: 30
    serviceUrl:
      defaultZone: ${eureka.server.url:http://localhost:8761/eureka}
    healthcheck:
      enabled: true
logging:
  level:
    org.springframework.security: DEBUG
    org.fao.geonet.searching: DEBUG

---
# Use this profile when running on a GN4 database on localhost and Elasticsearch index.
# Turn off security, config & discover.
spring:
  profiles: standalone
  rabbitmq.host: localhost
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/geonetwork
    username: www-data
    password: www-data
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    jpa.generate-ddl: false
    jpa.hibernate.ddl-auto: none
  cloud:
    config:
      discovery:
        enabled: false
      enabled: false
management:
  health.ldap.enabled: false
eureka:
  client:
    enabled: false
    registerWithEureka: false
    fetch-registry: false
gn:
  index.url: http://localhost:9200

